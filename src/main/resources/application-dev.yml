
server:
  port: 7859
spring:
  datasource:
    url: jdbc:mysql://192.168.0.141:3306/my_test?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8
    username: root
    password: 123456
    driver-class-name: com.mysql.cj.jdbc.Driver
  aop:
    auto: true
    proxy-target-class: true
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    virtual-host: /
    userame: guest
    password: guest
    publisher-confirms: true
    publisher-returns: true
    listener:
      direct:
        acknowledge-mode: auto
      simple:
        acknowledge-mode: auto
  jackson:
    #参数意义：
    #JsonInclude.Include.ALWAYS              默认
    #JsonInclude.Include.NON_DEFAULT     属性为默认值不序列化
    #JsonInclude.Include.NON_EMPTY         属性为 空（””） 或者为 NULL 都不序列化
    #JsonInclude.Include.NON_NULL           属性为NULL   不序列化
    default-property-inclusion: ALWAYS
    time-zone: GMT+8
    date-format: yyyy-MM-dd HH:mm:ss
#  quartz:
#    #相关属性配置
#    properties:
#      org:
#        quartz:
#          scheduler:
#            instanceName: quartzScheduler
#            instanceId: AUTO
#          jobStore:
#            class: org.quartz.impl.jdbcjobstore.JobStoreTX
#            driverDelegateClass: org.quartz.impl.jdbcjobstore.StdJDBCDelegate
#            tablePrefix: QRTZ_
#            isClustered: false
#            clusterCheckinInterval: 10000
#            useProperties: false
#          threadPool:
#            class: org.quartz.simpl.SimpleThreadPool
#            threadCount: 10
#            threadPriority: 5
#            threadsInheritContextClassLoaderOfInitializingThread: true
#    #数据库方式
#    job-store-type: JDBC
#    #初始化表结构
#    jdbc:
#      initialize-schema: NEVER

#默认密码为空
redis:
  host: 192.168.0.141
  # Redis服务器连接端口
  port: 6379
  jedis:
    pool:
      #连接池最大连接数（使用负值表示没有限制）
      max-active: 100
      # 连接池中的最小空闲连接
      max-idle: 10
      # 连接池最大阻塞等待时间（使用负值表示没有限制）
      max-wait: 100000
  # 连接超时时间（毫秒）
  timeout: 5000
  #默认是索引为0的数据库
  database: 0


#Mybatis配置
#实体类包名

mybatis:
  type-aliases-package: com.example.demo.entity
  mapper-locations: classpath:mapper/*.xml
#mapper:
#  mappers: com.example.demo.configure.MyMapper
#  not-empty: false
#  identity: MYSQL
